// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.App = (function(superClass) {
  extend(App, superClass);

  function App() {
    return App.__super__.constructor.apply(this, arguments);
  }

  App.prototype.initialize = function() {
    var deck;
    this.set('deck', deck = new Deck());
    return this.set('chips', 100);
  };

  App.prototype.newGame = function() {
    var game;
    if (this.get('deck').length < 13) {
      initialize();
    }
    this.set('chips', (this.get('chips')) - 10);
    this.set('bet', 10);
    game = new Game(this.get('deck'));
    this.set('game', game);
    return game.on('change:winner', (function(_this) {
      return function() {
        switch (_this.get('game').get('winner')) {
          case 'player':
            return _this.set('chips', (_this.get('chips')) + ((_this.get('bet')) * 2));
          case 'tie':
            return _this.set('chips', (_this.get('chips')) + (_this.get('bet')));
        }
      };
    })(this));
  };

  return App;

})(Backbone.Model);
