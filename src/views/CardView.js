// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.CardView = (function(superClass) {
  extend(CardView, superClass);

  function CardView() {
    return CardView.__super__.constructor.apply(this, arguments);
  }

  CardView.prototype.className = 'card';

  CardView.prototype.template = _.template('<div class="card-container"> <div class="front"> <img src="img/cards/<%= rankName %>-<%= suitName %>.png" /> </div> <div class="back"> <img src="img/card-back.png" /> </div> </div>');

  CardView.prototype.initialize = function() {
    this.render();
    return this.model.on('change:revealed', this.flipCard, this);
  };

  CardView.prototype.render = function() {
    this.$el.children().detach();
    this.$el.html(this.template(this.model.attributes));
    this.$el.css({
      'position': 'relative',
      'left': '-1000px'
    }).animate({
      'left': '0px'
    }, 500);
    if (this.model.get('revealed')) {
      return setTimeout(this.flipCard.bind(this), 600);
    }
  };

  CardView.prototype.flipCard = function() {
    return this.$el.find('.card-container').addClass('flipper');
  };

  return CardView;

})(Backbone.View);
